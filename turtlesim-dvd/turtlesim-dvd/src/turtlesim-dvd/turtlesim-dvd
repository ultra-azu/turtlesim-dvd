#!/usr/bin/env python3

import rospy
from geometry_msgs.msg import Twist
from turtlesim.msg import Pose
#from std_srvs import Empty
import math
import time
import random

x = float(0)
y = float(0)

def poseCallback(pose_message):
    global x, y, theta, linear_velocity, angular_velocity

    x = pose_message.x
    y = pose_message.y

def dvd(speed, is_forward):
    velocity_message = Twist()
    global x, y
    if (is_forward == True):
        abs_speed = abs(speed)
    else:
        abs_speed = -abs(speed)

    velocity_message.linear.x = abs_speed + 0.5
    velocity_message.linear.y = abs_speed

    loop_rate = rospy.Rate(10)
    cmd_vel_topic = '/turtle1/cmd_vel'
    velocity_publisher = rospy.Publisher(cmd_vel_topic, Twist, queue_size=10)

    while not rospy.is_shutdown():
        #rospy.loginfo("Turtlesim moves forwards")
        velocity_publisher.publish(velocity_message)
        
        loop_rate.sleep()

        if (x >= 11.0):
            velocity = random.uniform(-abs_speed*0.5, -abs_speed)
            rospy.loginfo("velocity_x = {velocity}")
            velocity_message.linear.x = velocity
        elif (x <= 0.2):
            velocity = random.uniform(abs_speed, abs_speed*0.5)
            rospy.loginfo("velocity_x = {velocity}")
            velocity_message.linear.x = velocity

        if (y >= 11.0):
            velocity = random.uniform(-abs_speed*0.5, -abs_speed)
            velocity_message.linear.y = velocity
        elif (y <= 0.2):
            velocity = random.uniform(abs_speed, -abs_speed*0.5)
            velocity_message.linear.y = velocity


    velocity_message.linear.x = 0
    velocity_message.linear.y = 0
    velocity_publisher.publish(velocity_message)

if __name__ == "__main__":
    try:
        rospy.init_node("turtlesim-dvd", anonymous=True)

        cmd_vel_topic = '/turtle1/cmd_vel'
        velocity_publisher = rospy.Publisher(cmd_vel_topic, Twist, queue_size=10)

        position_topic='/turtle1/pose'
        pose_subscriber = rospy.Subscriber(position_topic, Pose, poseCallback)
        time.sleep(2)

        dvd(1.0, True)

    except rospy.ROSInterruptException:
        rospy.loginfo("node terminated")

    rospy.spin()
